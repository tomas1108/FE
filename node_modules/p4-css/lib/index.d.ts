export * from 'nano-css';
declare const nano: import("nano-css").NanoRenderer;
export declare const globalCss: () => void;
export declare const put: (selector: string, css: import("nano-css").CssLikeObject, atrule?: string | undefined) => void;
export declare const rule: (css: import("nano-css").CssLikeObject, block?: string | undefined) => string;
export declare const drule: (css: import("nano-css").CssLikeObject, block?: string | undefined) => import("nano-css").TDynamicCss;
export declare const sheet: (cssMap: {
    [s: string]: import("nano-css").CssLikeObject;
}, block?: string | undefined) => {
    [s: string]: string;
};
export declare const keyframes: (frames: object, block?: string | undefined) => string;
export declare const css: any;
declare const dsheet: any, useStyles: any, jsx: any, googleFont: any;
export { nano, dsheet, useStyles, jsx, googleFont };
