"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  mergeAttributes: () => merge_attributes_default,
  pingback: () => pingback_default
});
module.exports = __toCommonJS(src_exports);

// src/merge-attributes.ts
var import_js_util = require("@giphy/js-util");
var mergeAttribute = (attributes, newAttributes, key) => {
  const result1 = (0, import_js_util.pick)(attributes, [key]);
  const result2 = (0, import_js_util.pick)(newAttributes, [key]);
  if (result1[key] && result2[key]) {
    return __spreadValues(__spreadValues(__spreadValues({}, attributes), newAttributes), { [key]: result1[key] + ", " + result2[key] });
  }
  return __spreadValues(__spreadValues({}, attributes), newAttributes);
};
var merge_attributes_default = mergeAttribute;

// src/pingback.ts
var import_js_util3 = require("@giphy/js-util");
var import_throttle_debounce = require("throttle-debounce");

// src/global.ts
var global_default = (typeof window !== "undefined" ? window : global) || {};

// src/send-pingback.ts
var import_js_util2 = require("@giphy/js-util");
var _a;
var environment = ((_a = global_default) == null ? void 0 : _a.GIPHY_PINGBACK_URL) || "https://pingback.giphy.com";
var pingBackUrl = `${environment}/v2/pingback?apikey=l0HlIwPWyBBUDAUgM`;
var sendPingback = (events) => {
  const headers = (0, import_js_util2.getGiphySDKRequestHeaders)();
  headers == null ? void 0 : headers.set("Content-Type", "application/json");
  import_js_util2.Logger.debug(`Pingback session`, events);
  if (!events.length) {
    return new Promise((resolve) => resolve());
  }
  return fetch(pingBackUrl, {
    method: "POST",
    body: JSON.stringify({ events }),
    headers
  }).catch((error) => {
    import_js_util2.Logger.warn(`pingbacks failing to post ${error}`);
  });
};

// src/pingback.ts
var queuedPingbackEvents = [];
global_default.giphyRandomId = (0, import_js_util3.getPingbackId)();
var loggedInUserId = "";
function sendPingbacks() {
  const sendEvents = [...queuedPingbackEvents];
  queuedPingbackEvents = [];
  sendPingback(sendEvents);
}
var debouncedPingbackEvent = (0, import_throttle_debounce.debounce)(1e3, sendPingbacks);
var _a2, _b;
(_b = (_a2 = global_default).addEventListener) == null ? void 0 : _b.call(_a2, "beforeunload", sendPingbacks);
var pingback = ({
  userId,
  eventType,
  actionType,
  attributes,
  queueEvents = true,
  analyticsResponsePayload
}) => {
  loggedInUserId = userId ? String(userId) : loggedInUserId;
  const newEvent = {
    ts: Date.now(),
    attributes,
    action_type: actionType,
    user_id: (0, import_js_util3.getPingbackId)(),
    analytics_response_payload: analyticsResponsePayload
  };
  if (loggedInUserId) {
    newEvent.logged_in_user_id = loggedInUserId;
  }
  if (newEvent.analytics_response_payload) {
    newEvent.analytics_response_payload = `${newEvent.analytics_response_payload}${import_js_util3.Logger.ENABLED ? "&mode=verification" : ""}`;
  }
  if (eventType) {
    newEvent.event_type = eventType;
  }
  queuedPingbackEvents.push(newEvent);
  queueEvents ? debouncedPingbackEvent() : sendPingbacks();
};
var pingback_default = pingback;
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  mergeAttributes,
  pingback
});
